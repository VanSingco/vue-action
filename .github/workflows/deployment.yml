

name: Peiso Deployment
on:
  workflow_dispatch:
jobs:
  merge_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy prod.env.js from sandbox to temporary directory
        run: |
          mkdir temp
          cp sandbox/prod.env.js temp/prod.env.js
        
      - name: Merge main into sandox branch
        run: |
          git config --global user.email "vanske19@gmail.com"
          git config --global user.name "vansingco"
          git fetch origin sandbox
          git checkout sandbox
          git merge -s recursive -X theirs main --allow-unrelated-histories

      - name: Restore prod.env.js in sandbox branch
        run: |
          cp temp/prod.env.js sandbox/prod.env.js
          rm -r temp
          
      - name: Commit and push changes to sandbox branch
        run: |
          git add .
          git commit -m "Merge changes from main branch"
          git push origin sandbox
      

  deploy:
    needs: merge_branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.8.0
      - name: Install Dependencies and Build
        run: |
          npm ci
          npm run build
      # - name: Copy Files to EC2
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_PRIVATE_KEY }}
      #     port: ${{ secrets.EC2_PORT }}
      #     source: "dist/"
      #     target: "/usr/share/nginx/html"

      # - name: SSH into EC2 and Update Nginx
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_PRIVATE_KEY }}
      #     port: ${{ secrets.EC2_PORT }}
      #     script: |
      #       sudo service nginx restart